Grading at Fri Jul  5 02:39:09 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==3795== Memcheck, a memory error detector
==3795== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3795== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3795== Command: ./test-eval inp.1.txt
==3795== Parent PID: 3794
==3795== 
==3795== Use of uninitialised value of size 8
==3795==    at 0x400C0D: print_hand (deck.c:8)
==3795==    by 0x402735: describe_hand (test-eval.c:74)
==3795==    by 0x402915: main (test-eval.c:116)
==3795== 
==3795== Invalid read of size 8
==3795==    at 0x400C0D: print_hand (deck.c:8)
==3795==    by 0x402735: describe_hand (test-eval.c:74)
==3795==    by 0x402915: main (test-eval.c:116)
==3795==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3795== 
==3795== 
==3795== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3795==  Access not within mapped region at address 0x0
==3795==    at 0x400C0D: print_hand (deck.c:8)
==3795==    by 0x402735: describe_hand (test-eval.c:74)
==3795==    by 0x402915: main (test-eval.c:116)
==3795==  If you believe this happened as a result of a stack
==3795==  overflow in your program's main thread (unlikely but
==3795==  possible), you can try to increase the size of the
==3795==  main thread stack using the --main-stacksize= flag.
==3795==  The main thread stack size used in this run was 8388608.
==3795== 
==3795== HEAP SUMMARY:
==3795==     in use at exit: 896 bytes in 18 blocks
==3795==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==3795== 
==3795== LEAK SUMMARY:
==3795==    definitely lost: 0 bytes in 0 blocks
==3795==    indirectly lost: 0 bytes in 0 blocks
==3795==      possibly lost: 0 bytes in 0 blocks
==3795==    still reachable: 896 bytes in 18 blocks
==3795==         suppressed: 0 bytes in 0 blocks
==3795== Rerun with --leak-check=full to see details of leaked memory
==3795== 
==3795== For counts of detected and suppressed errors, rerun with: -v
==3795== Use --track-origins=yes to see where uninitialised values come from
==3795== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==3800== Memcheck, a memory error detector
==3800== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3800== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3800== Command: ./test-eval inp.2.txt
==3800== Parent PID: 3799
==3800== 
==3800== Use of uninitialised value of size 8
==3800==    at 0x400C0D: print_hand (deck.c:8)
==3800==    by 0x402735: describe_hand (test-eval.c:74)
==3800==    by 0x402915: main (test-eval.c:116)
==3800== 
==3800== Invalid read of size 8
==3800==    at 0x400C0D: print_hand (deck.c:8)
==3800==    by 0x402735: describe_hand (test-eval.c:74)
==3800==    by 0x402915: main (test-eval.c:116)
==3800==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3800== 
==3800== 
==3800== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3800==  Access not within mapped region at address 0x0
==3800==    at 0x400C0D: print_hand (deck.c:8)
==3800==    by 0x402735: describe_hand (test-eval.c:74)
==3800==    by 0x402915: main (test-eval.c:116)
==3800==  If you believe this happened as a result of a stack
==3800==  overflow in your program's main thread (unlikely but
==3800==  possible), you can try to increase the size of the
==3800==  main thread stack using the --main-stacksize= flag.
==3800==  The main thread stack size used in this run was 8388608.
==3800== 
==3800== HEAP SUMMARY:
==3800==     in use at exit: 880 bytes in 17 blocks
==3800==   total heap usage: 30 allocs, 13 frees, 9,320 bytes allocated
==3800== 
==3800== LEAK SUMMARY:
==3800==    definitely lost: 0 bytes in 0 blocks
==3800==    indirectly lost: 0 bytes in 0 blocks
==3800==      possibly lost: 0 bytes in 0 blocks
==3800==    still reachable: 880 bytes in 17 blocks
==3800==         suppressed: 0 bytes in 0 blocks
==3800== Rerun with --leak-check=full to see details of leaked memory
==3800== 
==3800== For counts of detected and suppressed errors, rerun with: -v
==3800== Use --track-origins=yes to see where uninitialised values come from
==3800== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==3817== Memcheck, a memory error detector
==3817== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3817== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3817== Command: ./test-eval inp.4.txt
==3817== Parent PID: 3816
==3817== 
==3817== Use of uninitialised value of size 8
==3817==    at 0x400C0D: print_hand (deck.c:8)
==3817==    by 0x402735: describe_hand (test-eval.c:74)
==3817==    by 0x402915: main (test-eval.c:116)
==3817== 
==3817== Invalid read of size 8
==3817==    at 0x400C0D: print_hand (deck.c:8)
==3817==    by 0x402735: describe_hand (test-eval.c:74)
==3817==    by 0x402915: main (test-eval.c:116)
==3817==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3817== 
==3817== 
==3817== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3817==  Access not within mapped region at address 0x0
==3817==    at 0x400C0D: print_hand (deck.c:8)
==3817==    by 0x402735: describe_hand (test-eval.c:74)
==3817==    by 0x402915: main (test-eval.c:116)
==3817==  If you believe this happened as a result of a stack
==3817==  overflow in your program's main thread (unlikely but
==3817==  possible), you can try to increase the size of the
==3817==  main thread stack using the --main-stacksize= flag.
==3817==  The main thread stack size used in this run was 8388608.
==3817== 
==3817== HEAP SUMMARY:
==3817==     in use at exit: 896 bytes in 18 blocks
==3817==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==3817== 
==3817== LEAK SUMMARY:
==3817==    definitely lost: 0 bytes in 0 blocks
==3817==    indirectly lost: 0 bytes in 0 blocks
==3817==      possibly lost: 0 bytes in 0 blocks
==3817==    still reachable: 896 bytes in 18 blocks
==3817==         suppressed: 0 bytes in 0 blocks
==3817== Rerun with --leak-check=full to see details of leaked memory
==3817== 
==3817== For counts of detected and suppressed errors, rerun with: -v
==3817== Use --track-origins=yes to see where uninitialised values come from
==3817== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==3822== Memcheck, a memory error detector
==3822== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3822== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3822== Command: ./test-eval inp.5.txt
==3822== Parent PID: 3821
==3822== 
==3822== Use of uninitialised value of size 8
==3822==    at 0x400C0D: print_hand (deck.c:8)
==3822==    by 0x402735: describe_hand (test-eval.c:74)
==3822==    by 0x402915: main (test-eval.c:116)
==3822== 
==3822== Invalid read of size 8
==3822==    at 0x400C0D: print_hand (deck.c:8)
==3822==    by 0x402735: describe_hand (test-eval.c:74)
==3822==    by 0x402915: main (test-eval.c:116)
==3822==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3822== 
==3822== 
==3822== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3822==  Access not within mapped region at address 0x0
==3822==    at 0x400C0D: print_hand (deck.c:8)
==3822==    by 0x402735: describe_hand (test-eval.c:74)
==3822==    by 0x402915: main (test-eval.c:116)
==3822==  If you believe this happened as a result of a stack
==3822==  overflow in your program's main thread (unlikely but
==3822==  possible), you can try to increase the size of the
==3822==  main thread stack using the --main-stacksize= flag.
==3822==  The main thread stack size used in this run was 8388608.
==3822== 
==3822== HEAP SUMMARY:
==3822==     in use at exit: 928 bytes in 20 blocks
==3822==   total heap usage: 326 allocs, 306 frees, 15,000 bytes allocated
==3822== 
==3822== LEAK SUMMARY:
==3822==    definitely lost: 0 bytes in 0 blocks
==3822==    indirectly lost: 0 bytes in 0 blocks
==3822==      possibly lost: 0 bytes in 0 blocks
==3822==    still reachable: 928 bytes in 20 blocks
==3822==         suppressed: 0 bytes in 0 blocks
==3822== Rerun with --leak-check=full to see details of leaked memory
==3822== 
==3822== For counts of detected and suppressed errors, rerun with: -v
==3822== Use --track-origins=yes to see where uninitialised values come from
==3822== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
 Checking the output 
Line_59_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Kc Qs Js 0s 2s 						As Kc Qs Js 0s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 0s 2s 			 - 5 cards used for hand: As Qs Js 0s 2s 
Hand 2:								Hand 2:
--------							--------
As Ks Qc Js 0s 3s 						As Ks Qc Js 0s 3s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Js 0s 3s 			 - 5 cards used for hand: As Ks Js 0s 3s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kh Jh 9h 8s 4h 2h 						Kh Jh 9h 8s 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Jh 9h 4h 2h 			 - 5 cards used for hand: Kh Jh 9h 4h 2h 
Hand 2:								Hand 2:
--------							--------
Qd 9d 7d 6c 5d 2d 						Qd 9d 7d 6c 5d 2d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value Q)	 - The most of a kind is 1 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Qd 9d 7d 5d 2d 			 - 5 cards used for hand: Qd 9d 7d 5d 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Jc 9c 7h 4c 3c 2h 						Kc Jc 9c 7h 4c 3c 2h 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 3c 			 - 5 cards used for hand: Kc Jc 9c 4c 3c 
Hand 2:								Hand 2:
--------							--------
Kc Jc 9c 7h 4c 3h 2c 						Kc Jc 9c 7h 4c 3h 2c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 2c 			 - 5 cards used for hand: Kc Jc 9c 4c 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Qc Qs 7s 6s 3s 						Ac As Qc Qs 7s 6s 3s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 7s 6s 3s 			 - 5 cards used for hand: As Qs 7s 6s 3s 
Hand 2:								Hand 2:
--------							--------
Kc Kh Ks 9h 7h 3h 2h 						Kc Kh Ks 9h 7h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh 9h 7h 3h 2h 			 - 5 cards used for hand: Kh 9h 7h 3h 2h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 2h 						Ah Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Kh Qh 0h 8h 6h 4h 2h 						Kh Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh 0h 8h 6h 			 - 5 cards used for hand: Kh Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Kd 0d 8d 6d 4d 						Ad Kd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Kd 0d 8d 6d 			 - 5 cards used for hand: Ad Kd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Jd 0d 8d 6d 4d 						Ad Jd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Jd 0d 8d 6d 			 - 5 cards used for hand: Ad Jd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs Js 8s 6s 4s 						As Qs Js 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 8s 6s 			 - 5 cards used for hand: As Qs Js 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs 9s 8s 6s 4s 						As Qs 9s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 9s 8s 6s 			 - 5 cards used for hand: As Qs 9s 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 9c 6c 4c 						Ac Qc 0c 9c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 9c 6c 			 - 5 cards used for hand: Ac Qc 0c 9c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 7c 6c 4c 						Ac Qc 0c 7c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 7c 6c 			 - 5 cards used for hand: Ac Qc 0c 7c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 7h 4h 						Ah Qh 0h 8h 7h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 7h 			 - 5 cards used for hand: Ah Qh 0h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 5h 4h 						Ah Qh 0h 8h 5h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 5h 			 - 5 cards used for hand: Ah Qh 0h 8h 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 5h 						Ah Qh 0h 8h 6h 5h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 3h 						Ah Qh 0h 8h 6h 3h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==3852== Memcheck, a memory error detector
==3852== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3852== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3852== Command: ./test-eval inp.8.txt
==3852== Parent PID: 3851
==3852== 
==3852== Use of uninitialised value of size 8
==3852==    at 0x400C0D: print_hand (deck.c:8)
==3852==    by 0x402735: describe_hand (test-eval.c:74)
==3852==    by 0x402915: main (test-eval.c:116)
==3852== 
==3852== Invalid read of size 8
==3852==    at 0x400C0D: print_hand (deck.c:8)
==3852==    by 0x402735: describe_hand (test-eval.c:74)
==3852==    by 0x402915: main (test-eval.c:116)
==3852==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3852== 
==3852== 
==3852== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3852==  Access not within mapped region at address 0x0
==3852==    at 0x400C0D: print_hand (deck.c:8)
==3852==    by 0x402735: describe_hand (test-eval.c:74)
==3852==    by 0x402915: main (test-eval.c:116)
==3852==  If you believe this happened as a result of a stack
==3852==  overflow in your program's main thread (unlikely but
==3852==  possible), you can try to increase the size of the
==3852==  main thread stack using the --main-stacksize= flag.
==3852==  The main thread stack size used in this run was 8388608.
==3852== 
==3852== HEAP SUMMARY:
==3852==     in use at exit: 896 bytes in 18 blocks
==3852==   total heap usage: 32 allocs, 14 frees, 9,376 bytes allocated
==3852== 
==3852== LEAK SUMMARY:
==3852==    definitely lost: 0 bytes in 0 blocks
==3852==    indirectly lost: 0 bytes in 0 blocks
==3852==      possibly lost: 0 bytes in 0 blocks
==3852==    still reachable: 896 bytes in 18 blocks
==3852==         suppressed: 0 bytes in 0 blocks
==3852== Rerun with --leak-check=full to see details of leaked memory
==3852== 
==3852== For counts of detected and suppressed errors, rerun with: -v
==3852== Use --track-origins=yes to see where uninitialised values come from
==3852== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_53_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0					      |	 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: As Ks Qs Js 0s 		      <
Hand 2:							      <
--------						      <
Ad Kh Qh Jh Js 0h 9h 					      <
 - Flush in suit h					      <
 - Straight at index 0					      <
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 3 / value J)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: Kh Qh Jh 0h 9h 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Hand 1:							      <
--------						      <
Ah Kc 5h 4h 3h 2h 					      <
 - Flush in suit h					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      <
Hand 2:							      <
--------						      <
Ac 6c 5c 4c 3c 2c 					      <
 - Flush in suit c					      <
 - Straight flush at index 0				      <
 - Straight flush at index 1				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      <
Comparison : 						      <
--------------						      <
Tie							      <
============================				      <
Hand 1:							      <
--------						      <
As Ks Qs Js 0s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: As Ks Qs Js 0s 		      <
Hand 2:							      <
--------						      <
As 5s 4s 3s 2s 						      <
 - Flush in suit s					      <
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)   <
 - No secondary pair					      <
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      <
 - 5 cards used for hand: 5s 4s 3s 2s As 		      <
Comparison : 						      <
--------------						      <
Hand 1 wins!						      <
============================				      <
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==3870== Memcheck, a memory error detector
==3870== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3870== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3870== Command: ./test-eval inp.10.txt
==3870== Parent PID: 3869
==3870== 
==3870== Use of uninitialised value of size 8
==3870==    at 0x400C0D: print_hand (deck.c:8)
==3870==    by 0x402735: describe_hand (test-eval.c:74)
==3870==    by 0x402935: main (test-eval.c:119)
==3870== 
==3870== Invalid read of size 8
==3870==    at 0x400C0D: print_hand (deck.c:8)
==3870==    by 0x402735: describe_hand (test-eval.c:74)
==3870==    by 0x402935: main (test-eval.c:119)
==3870==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3870== 
==3870== 
==3870== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3870==  Access not within mapped region at address 0x0
==3870==    at 0x400C0D: print_hand (deck.c:8)
==3870==    by 0x402735: describe_hand (test-eval.c:74)
==3870==    by 0x402935: main (test-eval.c:119)
==3870==  If you believe this happened as a result of a stack
==3870==  overflow in your program's main thread (unlikely but
==3870==  possible), you can try to increase the size of the
==3870==  main thread stack using the --main-stacksize= flag.
==3870==  The main thread stack size used in this run was 8388608.
==3870== 
==3870== HEAP SUMMARY:
==3870==     in use at exit: 896 bytes in 18 blocks
==3870==   total heap usage: 34 allocs, 16 frees, 9,424 bytes allocated
==3870== 
==3870== LEAK SUMMARY:
==3870==    definitely lost: 0 bytes in 0 blocks
==3870==    indirectly lost: 0 bytes in 0 blocks
==3870==      possibly lost: 0 bytes in 0 blocks
==3870==    still reachable: 896 bytes in 18 blocks
==3870==         suppressed: 0 bytes in 0 blocks
==3870== Rerun with --leak-check=full to see details of leaked memory
==3870== 
==3870== For counts of detected and suppressed errors, rerun with: -v
==3870== Use --track-origins=yes to see where uninitialised values come from
==3870== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
