Grading at Wed Jul 31 09:25:49 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Your deck: timeout: the monitored command dumped core
Valgrind reported errors:
==949== Memcheck, a memory error detector
==949== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==949== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==949== Command: ./tester mde
==949== Parent PID: 948
==949== 
==949== Use of uninitialised value of size 8
==949==    at 0x402963: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x4036C4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==949== 
==949== Invalid read of size 4
==949==    at 0x402963: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x4036C4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==949==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==949== 
==949== 
==949== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==949==  Access not within mapped region at address 0x0
==949==    at 0x402963: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x4036C4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==949==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==949==  If you believe this happened as a result of a stack
==949==  overflow in your program's main thread (unlikely but
==949==  possible), you can try to increase the size of the
==949==  main thread stack using the --main-stacksize= flag.
==949==  The main thread stack size used in this run was 8388608.
==949== 
==949== HEAP SUMMARY:
==949==     in use at exit: 31,168 bytes in 1,639 blocks
==949==   total heap usage: 2,457 allocs, 818 frees, 421,184 bytes allocated
==949== 
==949== LEAK SUMMARY:
==949==    definitely lost: 0 bytes in 0 blocks
==949==    indirectly lost: 0 bytes in 0 blocks
==949==      possibly lost: 0 bytes in 0 blocks
==949==    still reachable: 31,168 bytes in 1,639 blocks
==949==         suppressed: 0 bytes in 0 blocks
==949== Rerun with --leak-check=full to see details of leaked memory
==949== 
==949== For counts of detected and suppressed errors, rerun with: -v
==949== Use --track-origins=yes to see where uninitialised values come from
==949== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Expected deck: timeout: the monitored command dumped core
Valgrind reported errors:
==953== Memcheck, a memory error detector
==953== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==953== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==953== Command: ./tester brd
==953== Parent PID: 952
==953== 
==953== Use of uninitialised value of size 8
==953==    at 0x4028AC: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x403350: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==953== 
==953== Invalid read of size 4
==953==    at 0x4028AC: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x403350: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==953==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==953== 
==953== 
==953== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==953==  Access not within mapped region at address 0x0
==953==    at 0x4028AC: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x403350: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==953==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==953==  If you believe this happened as a result of a stack
==953==  overflow in your program's main thread (unlikely but
==953==  possible), you can try to increase the size of the
==953==  main thread stack using the --main-stacksize= flag.
==953==  The main thread stack size used in this run was 8388608.
==953== 
==953== HEAP SUMMARY:
==953==     in use at exit: 2,184 bytes in 117 blocks
==953==   total heap usage: 172 allocs, 55 frees, 37,320 bytes allocated
==953== 
==953== LEAK SUMMARY:
==953==    definitely lost: 16 bytes in 1 blocks
==953==    indirectly lost: 16 bytes in 2 blocks
==953==      possibly lost: 0 bytes in 0 blocks
==953==    still reachable: 2,152 bytes in 114 blocks
==953==         suppressed: 0 bytes in 0 blocks
==953== Rerun with --leak-check=full to see details of leaked memory
==953== 
==953== For counts of detected and suppressed errors, rerun with: -v
==953== Use --track-origins=yes to see where uninitialised values come from
==953== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==957== Memcheck, a memory error detector
==957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==957== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==957== Command: ./tester gmc
==957== Parent PID: 956
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x402E7B: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x4E8476B: _itoa_word (_itoa.c:179)
==957==    by 0x4E8812C: vfprintf (vfprintf.c:1631)
==957==    by 0x4F509EE: __printf_chk (printf_chk.c:35)
==957==    by 0x402E59: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4E84775: _itoa_word (_itoa.c:179)
==957==    by 0x4E8812C: vfprintf (vfprintf.c:1631)
==957==    by 0x4F509EE: __printf_chk (printf_chk.c:35)
==957==    by 0x402E59: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4E881AF: vfprintf (vfprintf.c:1631)
==957==    by 0x4F509EE: __printf_chk (printf_chk.c:35)
==957==    by 0x402E59: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4E87C59: vfprintf (vfprintf.c:1631)
==957==    by 0x4F509EE: __printf_chk (printf_chk.c:35)
==957==    by 0x402E59: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4E87CE2: vfprintf (vfprintf.c:1631)
==957==    by 0x4F509EE: __printf_chk (printf_chk.c:35)
==957==    by 0x402E59: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== Invalid write of size 4
==957==    at 0x40140E: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x402E29: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957==  Address 0x520568c is 4 bytes before a block of size 12 alloc'd
==957==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==957==    by 0x401394: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x402E29: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== 
==957== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==957==  Bad permissions for mapped region at address 0x51FDFFC
==957==    at 0x40140E: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x402E29: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==957==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==957== 
==957== HEAP SUMMARY:
==957==     in use at exit: 4,248 bytes in 13 blocks
==957==   total heap usage: 21 allocs, 8 frees, 4,320 bytes allocated
==957== 
==957== LEAK SUMMARY:
==957==    definitely lost: 4,180 bytes in 9 blocks
==957==    indirectly lost: 0 bytes in 0 blocks
==957==      possibly lost: 0 bytes in 0 blocks
==957==    still reachable: 68 bytes in 4 blocks
==957==         suppressed: 0 bytes in 0 blocks
==957== Rerun with --leak-check=full to see details of leaked memory
==957== 
==957== For counts of detected and suppressed errors, rerun with: -v
==957== Use --track-origins=yes to see where uninitialised values come from
==957== ERROR SUMMARY: 403 errors from 7 contexts (suppressed: 0 from 0)

Overall Grade: F
