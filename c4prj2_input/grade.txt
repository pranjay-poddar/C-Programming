Grading at Thu Aug  1 15:07:45 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1940== Memcheck, a memory error detector
==1940== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1940== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1940== Command: ./tester h.txt d.txt
==1940== Parent PID: 1939
==1940== 
==1940== Invalid read of size 1
==1940==    at 0x400C2F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1940==    by 0x400CBD: read_input (in /graderhome/work/c4prj2_input/tester)
==1940==    by 0x401A34: main (test-input.c:69)
==1940==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==1940== 
==1940== 
==1940== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1940==  Access not within mapped region at address 0x1
==1940==    at 0x400C2F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1940==    by 0x400CBD: read_input (in /graderhome/work/c4prj2_input/tester)
==1940==    by 0x401A34: main (test-input.c:69)
==1940==  If you believe this happened as a result of a stack
==1940==  overflow in your program's main thread (unlikely but
==1940==  possible), you can try to increase the size of the
==1940==  main thread stack using the --main-stacksize= flag.
==1940==  The main thread stack size used in this run was 8388608.
==1940== 
==1940== HEAP SUMMARY:
==1940==     in use at exit: 832 bytes in 14 blocks
==1940==   total heap usage: 21 allocs, 7 frees, 5,096 bytes allocated
==1940== 
==1940== LEAK SUMMARY:
==1940==    definitely lost: 0 bytes in 0 blocks
==1940==    indirectly lost: 0 bytes in 0 blocks
==1940==      possibly lost: 0 bytes in 0 blocks
==1940==    still reachable: 832 bytes in 14 blocks
==1940==         suppressed: 0 bytes in 0 blocks
==1940== Rerun with --leak-check=full to see details of leaked memory
==1940== 
==1940== For counts of detected and suppressed errors, rerun with: -v
==1940== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1946== Memcheck, a memory error detector
==1946== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1946== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1946== Command: ./tester i1 i2
==1946== Parent PID: 1945
==1946== 
==1946== Invalid read of size 1
==1946==    at 0x400C2F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1946==    by 0x400CBD: read_input (in /graderhome/work/c4prj2_input/tester)
==1946==    by 0x401A34: main (test-input.c:69)
==1946==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==1946== 
==1946== 
==1946== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1946==  Access not within mapped region at address 0x1
==1946==    at 0x400C2F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1946==    by 0x400CBD: read_input (in /graderhome/work/c4prj2_input/tester)
==1946==    by 0x401A34: main (test-input.c:69)
==1946==  If you believe this happened as a result of a stack
==1946==  overflow in your program's main thread (unlikely but
==1946==  possible), you can try to increase the size of the
==1946==  main thread stack using the --main-stacksize= flag.
==1946==  The main thread stack size used in this run was 8388608.
==1946== 
==1946== HEAP SUMMARY:
==1946==     in use at exit: 928 bytes in 20 blocks
==1946==   total heap usage: 30 allocs, 10 frees, 5,288 bytes allocated
==1946== 
==1946== LEAK SUMMARY:
==1946==    definitely lost: 0 bytes in 0 blocks
==1946==    indirectly lost: 0 bytes in 0 blocks
==1946==      possibly lost: 0 bytes in 0 blocks
==1946==    still reachable: 928 bytes in 20 blocks
==1946==         suppressed: 0 bytes in 0 blocks
==1946== Rerun with --leak-check=full to see details of leaked memory
==1946== 
==1946== For counts of detected and suppressed errors, rerun with: -v
==1946== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
